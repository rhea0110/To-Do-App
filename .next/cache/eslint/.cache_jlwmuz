[{"C:\\Users\\Rhea Jain\\OneDrive\\Desktop\\Clone\\notes-app\\pages\\api\\hello.js":"1","C:\\Users\\Rhea Jain\\OneDrive\\Desktop\\Clone\\notes-app\\pages\\index.js":"2","C:\\Users\\Rhea Jain\\OneDrive\\Desktop\\Clone\\notes-app\\pages\\_app.js":"3","C:\\Users\\Rhea Jain\\OneDrive\\Desktop\\Clone\\notes-app\\components\\DeleteIcon.js":"4","C:\\Users\\Rhea Jain\\OneDrive\\Desktop\\Clone\\notes-app\\components\\EditIcon.js":"5","C:\\Users\\Rhea Jain\\OneDrive\\Desktop\\Clone\\notes-app\\components\\Note.js":"6","C:\\Users\\Rhea Jain\\OneDrive\\Desktop\\Clone\\notes-app\\components\\NotesList.js":"7","C:\\Users\\Rhea Jain\\OneDrive\\Desktop\\Clone\\notes-app\\components\\PlusIcon.js":"8","C:\\Users\\Rhea Jain\\OneDrive\\Desktop\\Clone\\notes-app\\components\\SearchIcon.js":"9","C:\\Users\\Rhea Jain\\OneDrive\\Desktop\\Clone\\notes-app\\components\\Submit.js":"10"},{"size":170,"mtime":1664433130324,"results":"11","hashOfConfig":"12"},{"size":298,"mtime":1665854622494,"results":"13","hashOfConfig":"12"},{"size":137,"mtime":1664433130324,"results":"14","hashOfConfig":"12"},{"size":778,"mtime":1665775925889,"results":"15","hashOfConfig":"12"},{"size":663,"mtime":1665775933323,"results":"16","hashOfConfig":"12"},{"size":2380,"mtime":1665994306647,"results":"17","hashOfConfig":"12"},{"size":3223,"mtime":1665993515802,"results":"18","hashOfConfig":"12"},{"size":443,"mtime":1665771753176,"results":"19","hashOfConfig":"12"},{"size":597,"mtime":1665767601966,"results":"20","hashOfConfig":"12"},{"size":420,"mtime":1665994293619,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"a1d7b8",{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43"},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Rhea Jain\\OneDrive\\Desktop\\Clone\\notes-app\\pages\\api\\hello.js",[],[],"C:\\Users\\Rhea Jain\\OneDrive\\Desktop\\Clone\\notes-app\\pages\\index.js",[],[],"C:\\Users\\Rhea Jain\\OneDrive\\Desktop\\Clone\\notes-app\\pages\\_app.js",[],[],"C:\\Users\\Rhea Jain\\OneDrive\\Desktop\\Clone\\notes-app\\components\\DeleteIcon.js",[],[],"C:\\Users\\Rhea Jain\\OneDrive\\Desktop\\Clone\\notes-app\\components\\EditIcon.js",[],[],"C:\\Users\\Rhea Jain\\OneDrive\\Desktop\\Clone\\notes-app\\components\\Note.js",[],[],"C:\\Users\\Rhea Jain\\OneDrive\\Desktop\\Clone\\notes-app\\components\\NotesList.js",["53"],[],"import React from \"react\";\r\nimport SearchIcon from \"./SearchIcon\";\r\nimport { useState, useEffect } from \"react\";\r\nimport uniqid from \"uniqid\";\r\nimport Note from \"./Note\";\r\nimport PlusIcon from \"./PlusIcon\";\r\n\r\n/*   new Array(50).fill(0).map((el, index) => {\r\n    return {\r\n      id: uniqid(),\r\n      title: `Note - ${(index += 1)}`,\r\n      text: \"random text writing for text\",\r\n    };\r\n  }); */\r\nconst NotesList = (props) => {\r\n    const [notes, setNotes] = useState(\r\n      []\r\n  );\r\n  const showResults = () => {\r\n  \r\n\r\n    if (searchQuery === '') {\r\n      window.location.reload();\r\n    } \r\n    let data = notes.filter(note1 => {\r\n      if (note1.title.includes(searchQuery) || note1.text.includes(searchQuery))\r\n        return true;\r\n      else\r\n        return false;\r\n    })\r\n    setNotes(data);\r\n  }\r\n\r\n  useEffect(() => { \r\n  setNotes(localStorage.getItem(\"notes\") ? JSON.parse(localStorage.getItem(\"notes\")) : [])\r\n  }, [] )\r\n    const [searchQuery, setSearchQuery] = useState('');\r\n    const addNote = () => {\r\n        const newNotes = [...notes];\r\n        newNotes.unshift({\r\n            id: uniqid(),\r\n            text: 'Add notes',\r\n            title: 'Add a title',\r\n        })\r\n      setNotes(newNotes);\r\n      localStorage.setItem('notes', JSON.stringify(newNotes));\r\n    }\r\n    return (\r\n      <div className=\"w-full min-h-screen\">\r\n        <h1 className=\"text-blue-900 font-medium text-5xl tracking-wide text-center mb-4\">\r\n          Post Notes\r\n        </h1>\r\n\r\n            <div className=\"flex relative rounded-sm text-blue-900 font-semibold items-center border-2 border-blue-900 mx-auto w-[70%] sm:w-[50%] h-[40px] backdrop-blur-[8px] backdrop-saturate-100\">\r\n                <PlusIcon className='w-[35px] right-0 translate-x-[150%] backdrop-blur-[8px] ease-in backdrop-saturate-10 hover:scale-150 transition-all hover:cursor-pointer absolute text-blue-900 -mt-[18px]'\r\n                onClick={() => addNote() }\r\n                />\r\n          <SearchIcon className=\"w-6 h-6 ml-2\" placeholder=\"Search\" />\r\n          <input\r\n            type=\"Search\"\r\n            className=\"bg-transparent outline-none flex flex-grow indent-2 placeholder-blue-900\"\r\n                    placeholder=\"Search by a keyword\" \r\n                    onChange={(e) => setSearchQuery(e.target.value) }\r\n          />\r\n          <button onClick={showResults} className=\"\"><img src=\"binoculars.png\" alt=\"Search\" className=\"w-10 border-l-2 border-blue-900 p-1\"/></button>\r\n            </div>\r\n            {/*notes*/}\r\n            <div className=\"w-full grid grid-cols-1 md:grid-cols-3 gap-y-[50px] gap-x-8 p-12 \">\r\n                {\r\n                    notes.map(({id, title, text}) => {\r\n                        return (\r\n                          <div key={id}>\r\n                            <Note\r\n                              id={id}\r\n                              title={title}\r\n                              text={text}\r\n                              notes={notes}\r\n                              setNotes={setNotes}\r\n                            />\r\n                          </div>\r\n                        );\r\n                    })\r\n                }\r\n            </div>\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default NotesList;","C:\\Users\\Rhea Jain\\OneDrive\\Desktop\\Clone\\notes-app\\components\\PlusIcon.js",[],[],"C:\\Users\\Rhea Jain\\OneDrive\\Desktop\\Clone\\notes-app\\components\\SearchIcon.js",[],[],"C:\\Users\\Rhea Jain\\OneDrive\\Desktop\\Clone\\notes-app\\components\\Submit.js",[],[],{"ruleId":"54","severity":1,"message":"55","line":65,"column":54,"nodeType":"56","endLine":65,"endColumn":142},"@next/next/no-img-element","Do not use `<img>` element. Use `<Image />` from `next/image` instead. See: https://nextjs.org/docs/messages/no-img-element","JSXOpeningElement"]